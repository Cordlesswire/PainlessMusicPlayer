// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.doctoror.commons.wear.nano;

@SuppressWarnings("hiding")
public interface WearSearchData {

  public static final class Results extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Results[] _emptyArray;
    public static Results[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Results[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .Album albums = 1;
    public com.doctoror.commons.wear.nano.WearSearchData.Album[] albums;

    // repeated .Artist artists = 2;
    public com.doctoror.commons.wear.nano.WearSearchData.Artist[] artists;

    // repeated .Track tracks = 3;
    public com.doctoror.commons.wear.nano.WearSearchData.Track[] tracks;

    public Results() {
      clear();
    }

    public Results clear() {
      albums = com.doctoror.commons.wear.nano.WearSearchData.Album.emptyArray();
      artists = com.doctoror.commons.wear.nano.WearSearchData.Artist.emptyArray();
      tracks = com.doctoror.commons.wear.nano.WearSearchData.Track.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.albums != null && this.albums.length > 0) {
        for (int i = 0; i < this.albums.length; i++) {
          com.doctoror.commons.wear.nano.WearSearchData.Album element = this.albums[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.artists != null && this.artists.length > 0) {
        for (int i = 0; i < this.artists.length; i++) {
          com.doctoror.commons.wear.nano.WearSearchData.Artist element = this.artists[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.tracks != null && this.tracks.length > 0) {
        for (int i = 0; i < this.tracks.length; i++) {
          com.doctoror.commons.wear.nano.WearSearchData.Track element = this.tracks[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.albums != null && this.albums.length > 0) {
        for (int i = 0; i < this.albums.length; i++) {
          com.doctoror.commons.wear.nano.WearSearchData.Album element = this.albums[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.artists != null && this.artists.length > 0) {
        for (int i = 0; i < this.artists.length; i++) {
          com.doctoror.commons.wear.nano.WearSearchData.Artist element = this.artists[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.tracks != null && this.tracks.length > 0) {
        for (int i = 0; i < this.tracks.length; i++) {
          com.doctoror.commons.wear.nano.WearSearchData.Track element = this.tracks[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public Results mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.albums == null ? 0 : this.albums.length;
            com.doctoror.commons.wear.nano.WearSearchData.Album[] newArray =
                new com.doctoror.commons.wear.nano.WearSearchData.Album[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.albums, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.doctoror.commons.wear.nano.WearSearchData.Album();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.doctoror.commons.wear.nano.WearSearchData.Album();
            input.readMessage(newArray[i]);
            this.albums = newArray;
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.artists == null ? 0 : this.artists.length;
            com.doctoror.commons.wear.nano.WearSearchData.Artist[] newArray =
                new com.doctoror.commons.wear.nano.WearSearchData.Artist[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.artists, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.doctoror.commons.wear.nano.WearSearchData.Artist();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.doctoror.commons.wear.nano.WearSearchData.Artist();
            input.readMessage(newArray[i]);
            this.artists = newArray;
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.tracks == null ? 0 : this.tracks.length;
            com.doctoror.commons.wear.nano.WearSearchData.Track[] newArray =
                new com.doctoror.commons.wear.nano.WearSearchData.Track[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.tracks, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.doctoror.commons.wear.nano.WearSearchData.Track();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.doctoror.commons.wear.nano.WearSearchData.Track();
            input.readMessage(newArray[i]);
            this.tracks = newArray;
            break;
          }
        }
      }
    }

    public static Results parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Results(), data);
    }

    public static Results parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Results().mergeFrom(input);
    }
  }

  public static final class Artist extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Artist[] _emptyArray;
    public static Artist[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Artist[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 id = 1;
    public long id;

    // optional string title = 2;
    public java.lang.String title;

    public Artist() {
      clear();
    }

    public Artist clear() {
      id = 0L;
      title = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (!this.title.equals("")) {
        output.writeString(2, this.title);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (!this.title.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.title);
      }
      return size;
    }

    @Override
    public Artist mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            this.title = input.readString();
            break;
          }
        }
      }
    }

    public static Artist parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Artist(), data);
    }

    public static Artist parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Artist().mergeFrom(input);
    }
  }

  public static final class Album extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Album[] _emptyArray;
    public static Album[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Album[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 id = 1;
    public long id;

    // optional string title = 2;
    public java.lang.String title;

    public Album() {
      clear();
    }

    public Album clear() {
      id = 0L;
      title = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (!this.title.equals("")) {
        output.writeString(2, this.title);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (!this.title.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.title);
      }
      return size;
    }

    @Override
    public Album mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            this.title = input.readString();
            break;
          }
        }
      }
    }

    public static Album parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Album(), data);
    }

    public static Album parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Album().mergeFrom(input);
    }
  }

  public static final class Track extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Track[] _emptyArray;
    public static Track[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Track[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 id = 1;
    public long id;

    // optional string title = 2;
    public java.lang.String title;

    public Track() {
      clear();
    }

    public Track clear() {
      id = 0L;
      title = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (!this.title.equals("")) {
        output.writeString(2, this.title);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (!this.title.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.title);
      }
      return size;
    }

    @Override
    public Track mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            this.title = input.readString();
            break;
          }
        }
      }
    }

    public static Track parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Track(), data);
    }

    public static Track parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Track().mergeFrom(input);
    }
  }
}
